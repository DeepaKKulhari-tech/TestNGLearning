<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="ML-J5P86S2" ignored="7" name="Regression" tests="12" failures="3" timestamp="24 Oct 2020 08:29:42 GMT" time="0.062" errors="0">
  <testcase name="siblingsName" time="0.006" classname="test.TestNGXmlBasics">
    <failure type="java.lang.AssertionError" message="expected [true] but found [false]">
      <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at test.TestNGXmlBasics.siblingsName(TestNGXmlBasics.java:30)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
... Removed 20 stack frames]]>
    </failure>
  </testcase> <!-- siblingsName -->
  <testcase name="siblingsName" time="0.003" classname="test.TestNGXmlBasics">
    <failure type="java.lang.AssertionError" message="expected [true] but found [false]">
      <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at test.TestNGXmlBasics.siblingsName(TestNGXmlBasics.java:30)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
... Removed 20 stack frames]]>
    </failure>
  </testcase> <!-- siblingsName -->
  <testcase name="siblingsName" time="0.002" classname="test.TestNGXmlBasics">
    <failure type="java.lang.AssertionError" message="expected [true] but found [false]">
      <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at test.TestNGXmlBasics.siblingsName(TestNGXmlBasics.java:30)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
... Removed 20 stack frames]]>
    </failure>
  </testcase> <!-- siblingsName -->
  <testcase name="xmldemo1" time="0.002" classname="test.TestNGXmlBasics"/>
  <testcase name="xmldemo1" time="0.002" classname="test.TestNGXmlBasics"/>
  <testcase name="xmldemo1" time="0.001" classname="test.TestNGXmlBasics"/>
  <testcase name="xmldemo2" time="0.001" classname="test.TestNGXmlBasics"/>
  <testcase name="mobile04" time="0.004" classname="testPackage01.MobileTestSuit02"/>
  <testcase name="mobile01" time="0.001" classname="testPackage01.MobileTestSuit02"/>
  <testcase name="mobile02" time="0.001" classname="testPackage01.MobileTestSuit02"/>
  <testcase name="mobile03" time="0.001" classname="testPackage01.MobileTestSuit02"/>
  <testcase name="mobile05" time="0.001" classname="testPackage01.MobileTestSuit02"/>
  <testcase name="mobile01" time="0.0" classname="test.TestSuit02">
    <ignored/>
  </testcase> <!-- mobile01 -->
  <testcase name="mobile04" time="0.0" classname="test.TestSuit02">
    <ignored/>
  </testcase> <!-- mobile04 -->
  <testcase name="demo1suit" time="0.0" classname="test.TestSuit01">
    <ignored/>
  </testcase> <!-- demo1suit -->
  <testcase name="mobile05" time="0.0" classname="test.TestSuit02">
    <ignored/>
  </testcase> <!-- mobile05 -->
  <testcase name="mobile02" time="0.0" classname="test.TestSuit02">
    <ignored/>
  </testcase> <!-- mobile02 -->
  <testcase name="mobile03" time="0.0" classname="test.TestSuit02">
    <ignored/>
  </testcase> <!-- mobile03 -->
  <testcase name="demo2suit" time="0.0" classname="test.TestSuit01">
    <ignored/>
  </testcase> <!-- demo2suit -->
</testsuite> <!-- Regression -->
